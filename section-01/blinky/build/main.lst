ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB43:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 2


  34:Core/Src/main.c **** #define LD2_Pin GPIO_PIN_5
  35:Core/Src/main.c **** #define LD2_GPIO_Port GPIOA
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****  * @brief  The application entry point.
  65:Core/Src/main.c ****  * @retval int
  66:Core/Src/main.c ****  */
  67:Core/Src/main.c **** int main(void) {
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  76:Core/Src/main.c ****    */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 3


  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_USART2_UART_Init();
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Infinite loop */
  98:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****   while (1) {
 100:Core/Src/main.c ****     /* USER CODE END WHILE */
 101:Core/Src/main.c **** 	
 102:Core/Src/main.c ****   
 103:Core/Src/main.c ****     	
 104:Core/Src/main.c ****     /*Blinky exercise:*/ 
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     /*Don't write code outside the while loop.*/
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 110:Core/Src/main.c ****     HAL_Delay(500);	
 111:Core/Src/main.c ****     
 112:Core/Src/main.c ****     
 113:Core/Src/main.c ****     
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 116:Core/Src/main.c ****   }
 117:Core/Src/main.c ****   /* USER CODE END 3 */
 118:Core/Src/main.c **** }
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** /**
 121:Core/Src/main.c ****  * @brief System Clock Configuration
 122:Core/Src/main.c ****  * @retval None
 123:Core/Src/main.c ****  */
 124:Core/Src/main.c **** void SystemClock_Config(void) {
 125:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 126:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****    */
 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 139:Core/Src/main.c ****     Error_Handler();
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 143:Core/Src/main.c ****    */
 144:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType =
 145:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 4


 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK) {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****  * @brief USART2 Initialization Function
 157:Core/Src/main.c ****  * @param None
 158:Core/Src/main.c ****  * @retval None
 159:Core/Src/main.c ****  */
 160:Core/Src/main.c **** static void MX_USART2_UART_Init(void) {
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 169:Core/Src/main.c ****   huart2.Instance = USART2;
 170:Core/Src/main.c ****   huart2.Init.BaudRate = 38400;
 171:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 172:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 173:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 174:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 175:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 176:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 177:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 178:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 179:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 180:Core/Src/main.c ****     Error_Handler();
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****  * @brief GPIO Initialization Function
 189:Core/Src/main.c ****  * @param None
 190:Core/Src/main.c ****  * @retval None
 191:Core/Src/main.c ****  */
 192:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 192 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 5


  38              		.cfi_def_cfa_offset 48
 193:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 193 3 view .LVU1
  40              		.loc 1 193 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 194:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 195:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 198:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 198 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 198 3 view .LVU4
  49              		.loc 1 198 3 view .LVU5
  50 000e 1D4B     		ldr	r3, .L2
  51 0010 5A69     		ldr	r2, [r3, #20]
  52 0012 8021     		movs	r1, #128
  53 0014 0903     		lsls	r1, r1, #12
  54 0016 0A43     		orrs	r2, r1
  55 0018 5A61     		str	r2, [r3, #20]
  56              		.loc 1 198 3 view .LVU6
  57 001a 5A69     		ldr	r2, [r3, #20]
  58 001c 0A40     		ands	r2, r1
  59 001e 0092     		str	r2, [sp]
  60              		.loc 1 198 3 view .LVU7
  61 0020 009A     		ldr	r2, [sp]
  62              	.LBE4:
  63              		.loc 1 198 3 view .LVU8
 199:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  64              		.loc 1 199 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 199 3 view .LVU10
  67              		.loc 1 199 3 view .LVU11
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 8021     		movs	r1, #128
  70 0026 C903     		lsls	r1, r1, #15
  71 0028 0A43     		orrs	r2, r1
  72 002a 5A61     		str	r2, [r3, #20]
  73              		.loc 1 199 3 view .LVU12
  74 002c 5A69     		ldr	r2, [r3, #20]
  75 002e 0A40     		ands	r2, r1
  76 0030 0192     		str	r2, [sp, #4]
  77              		.loc 1 199 3 view .LVU13
  78 0032 019A     		ldr	r2, [sp, #4]
  79              	.LBE5:
  80              		.loc 1 199 3 view .LVU14
 200:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  81              		.loc 1 200 3 view .LVU15
  82              	.LBB6:
  83              		.loc 1 200 3 view .LVU16
  84              		.loc 1 200 3 view .LVU17
  85 0034 5A69     		ldr	r2, [r3, #20]
  86 0036 8021     		movs	r1, #128
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 6


  87 0038 8902     		lsls	r1, r1, #10
  88 003a 0A43     		orrs	r2, r1
  89 003c 5A61     		str	r2, [r3, #20]
  90              		.loc 1 200 3 view .LVU18
  91 003e 5B69     		ldr	r3, [r3, #20]
  92 0040 0B40     		ands	r3, r1
  93 0042 0293     		str	r3, [sp, #8]
  94              		.loc 1 200 3 view .LVU19
  95 0044 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 200 3 view .LVU20
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 203:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  98              		.loc 1 203 3 view .LVU21
  99 0046 9025     		movs	r5, #144
 100 0048 ED05     		lsls	r5, r5, #23
 101 004a 0022     		movs	r2, #0
 102 004c 2021     		movs	r1, #32
 103 004e 2800     		movs	r0, r5
 104 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 105              	.LVL1:
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 206:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 106              		.loc 1 206 3 view .LVU22
 107              		.loc 1 206 23 is_stmt 0 view .LVU23
 108 0054 8023     		movs	r3, #128
 109 0056 9B01     		lsls	r3, r3, #6
 110 0058 0393     		str	r3, [sp, #12]
 207:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 111              		.loc 1 207 3 is_stmt 1 view .LVU24
 112              		.loc 1 207 24 is_stmt 0 view .LVU25
 113 005a 8423     		movs	r3, #132
 114 005c 9B03     		lsls	r3, r3, #14
 115 005e 0493     		str	r3, [sp, #16]
 208:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 116              		.loc 1 208 3 is_stmt 1 view .LVU26
 117              		.loc 1 208 24 is_stmt 0 view .LVU27
 118 0060 0024     		movs	r4, #0
 119 0062 0594     		str	r4, [sp, #20]
 209:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 120              		.loc 1 209 3 is_stmt 1 view .LVU28
 121 0064 03A9     		add	r1, sp, #12
 122 0066 0848     		ldr	r0, .L2+4
 123 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 124              	.LVL2:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 212:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 125              		.loc 1 212 3 view .LVU29
 126              		.loc 1 212 23 is_stmt 0 view .LVU30
 127 006c 2023     		movs	r3, #32
 128 006e 0393     		str	r3, [sp, #12]
 213:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 129              		.loc 1 213 3 is_stmt 1 view .LVU31
 130              		.loc 1 213 24 is_stmt 0 view .LVU32
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 7


 131 0070 1F3B     		subs	r3, r3, #31
 132 0072 0493     		str	r3, [sp, #16]
 214:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 214 3 is_stmt 1 view .LVU33
 134              		.loc 1 214 24 is_stmt 0 view .LVU34
 135 0074 0594     		str	r4, [sp, #20]
 215:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 136              		.loc 1 215 3 is_stmt 1 view .LVU35
 137              		.loc 1 215 25 is_stmt 0 view .LVU36
 138 0076 0694     		str	r4, [sp, #24]
 216:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 139              		.loc 1 216 3 is_stmt 1 view .LVU37
 140 0078 03A9     		add	r1, sp, #12
 141 007a 2800     		movs	r0, r5
 142 007c FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL3:
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 219:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 220:Core/Src/main.c **** }
 144              		.loc 1 220 1 is_stmt 0 view .LVU38
 145 0080 09B0     		add	sp, sp, #36
 146              		@ sp needed
 147 0082 30BD     		pop	{r4, r5, pc}
 148              	.L3:
 149              		.align	2
 150              	.L2:
 151 0084 00100240 		.word	1073876992
 152 0088 00080048 		.word	1207961600
 153              		.cfi_endproc
 154              	.LFE43:
 156              		.section	.text.Error_Handler,"ax",%progbits
 157              		.align	1
 158              		.global	Error_Handler
 159              		.syntax unified
 160              		.code	16
 161              		.thumb_func
 163              	Error_Handler:
 164              	.LFB44:
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** /* USER CODE END 4 */
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /**
 227:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 228:Core/Src/main.c ****  * @retval None
 229:Core/Src/main.c ****  */
 230:Core/Src/main.c **** void Error_Handler(void) {
 165              		.loc 1 230 26 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ Volatile: function does not return.
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 231:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 232:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 8


 233:Core/Src/main.c ****   __disable_irq();
 171              		.loc 1 233 3 view .LVU40
 172              	.LBB7:
 173              	.LBI7:
 174              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 9


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 10


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 175              		.loc 2 140 27 view .LVU41
 176              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 177              		.loc 2 142 3 view .LVU42
 178              		.syntax divided
 179              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 180 0000 72B6     		cpsid i
 181              	@ 0 "" 2
 182              		.thumb
 183              		.syntax unified
 184              	.L5:
 185              	.LBE8:
 186              	.LBE7:
 234:Core/Src/main.c ****   while (1) {
 187              		.loc 1 234 3 view .LVU43
 235:Core/Src/main.c ****   }
 188              		.loc 1 235 3 view .LVU44
 234:Core/Src/main.c ****   while (1) {
 189              		.loc 1 234 9 view .LVU45
 190 0002 FEE7     		b	.L5
 191              		.cfi_endproc
 192              	.LFE44:
 194              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 195              		.align	1
 196              		.syntax unified
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 11


 197              		.code	16
 198              		.thumb_func
 200              	MX_USART2_UART_Init:
 201              	.LFB42:
 160:Core/Src/main.c **** 
 202              		.loc 1 160 39 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 10B5     		push	{r4, lr}
 207              	.LCFI2:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
 169:Core/Src/main.c ****   huart2.Init.BaudRate = 38400;
 211              		.loc 1 169 3 view .LVU47
 169:Core/Src/main.c ****   huart2.Init.BaudRate = 38400;
 212              		.loc 1 169 19 is_stmt 0 view .LVU48
 213 0002 0B48     		ldr	r0, .L9
 214 0004 0B4B     		ldr	r3, .L9+4
 215 0006 0360     		str	r3, [r0]
 170:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 216              		.loc 1 170 3 is_stmt 1 view .LVU49
 170:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 217              		.loc 1 170 24 is_stmt 0 view .LVU50
 218 0008 9623     		movs	r3, #150
 219 000a 1B02     		lsls	r3, r3, #8
 220 000c 4360     		str	r3, [r0, #4]
 171:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 221              		.loc 1 171 3 is_stmt 1 view .LVU51
 171:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 222              		.loc 1 171 26 is_stmt 0 view .LVU52
 223 000e 0023     		movs	r3, #0
 224 0010 8360     		str	r3, [r0, #8]
 172:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 225              		.loc 1 172 3 is_stmt 1 view .LVU53
 172:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 226              		.loc 1 172 24 is_stmt 0 view .LVU54
 227 0012 C360     		str	r3, [r0, #12]
 173:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 228              		.loc 1 173 3 is_stmt 1 view .LVU55
 173:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 229              		.loc 1 173 22 is_stmt 0 view .LVU56
 230 0014 0361     		str	r3, [r0, #16]
 174:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 231              		.loc 1 174 3 is_stmt 1 view .LVU57
 174:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 232              		.loc 1 174 20 is_stmt 0 view .LVU58
 233 0016 0C22     		movs	r2, #12
 234 0018 4261     		str	r2, [r0, #20]
 175:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 235              		.loc 1 175 3 is_stmt 1 view .LVU59
 175:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 236              		.loc 1 175 25 is_stmt 0 view .LVU60
 237 001a 8361     		str	r3, [r0, #24]
 176:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 238              		.loc 1 176 3 is_stmt 1 view .LVU61
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 12


 176:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 239              		.loc 1 176 28 is_stmt 0 view .LVU62
 240 001c C361     		str	r3, [r0, #28]
 177:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 241              		.loc 1 177 3 is_stmt 1 view .LVU63
 177:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 242              		.loc 1 177 30 is_stmt 0 view .LVU64
 243 001e 0362     		str	r3, [r0, #32]
 178:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 244              		.loc 1 178 3 is_stmt 1 view .LVU65
 178:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK) {
 245              		.loc 1 178 38 is_stmt 0 view .LVU66
 246 0020 4362     		str	r3, [r0, #36]
 179:Core/Src/main.c ****     Error_Handler();
 247              		.loc 1 179 3 is_stmt 1 view .LVU67
 179:Core/Src/main.c ****     Error_Handler();
 248              		.loc 1 179 7 is_stmt 0 view .LVU68
 249 0022 FFF7FEFF 		bl	HAL_UART_Init
 250              	.LVL4:
 179:Core/Src/main.c ****     Error_Handler();
 251              		.loc 1 179 6 discriminator 1 view .LVU69
 252 0026 0028     		cmp	r0, #0
 253 0028 00D1     		bne	.L8
 185:Core/Src/main.c **** 
 254              		.loc 1 185 1 view .LVU70
 255              		@ sp needed
 256 002a 10BD     		pop	{r4, pc}
 257              	.L8:
 180:Core/Src/main.c ****   }
 258              		.loc 1 180 5 is_stmt 1 view .LVU71
 259 002c FFF7FEFF 		bl	Error_Handler
 260              	.LVL5:
 261              	.L10:
 262              		.align	2
 263              	.L9:
 264 0030 00000000 		.word	huart2
 265 0034 00440040 		.word	1073759232
 266              		.cfi_endproc
 267              	.LFE42:
 269              		.section	.text.SystemClock_Config,"ax",%progbits
 270              		.align	1
 271              		.global	SystemClock_Config
 272              		.syntax unified
 273              		.code	16
 274              		.thumb_func
 276              	SystemClock_Config:
 277              	.LFB41:
 124:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 278              		.loc 1 124 31 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 64
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 00B5     		push	{lr}
 283              	.LCFI3:
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 14, -4
 286 0002 91B0     		sub	sp, sp, #68
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 13


 287              	.LCFI4:
 288              		.cfi_def_cfa_offset 72
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 289              		.loc 1 125 3 view .LVU73
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 290              		.loc 1 125 22 is_stmt 0 view .LVU74
 291 0004 3022     		movs	r2, #48
 292 0006 0021     		movs	r1, #0
 293 0008 04A8     		add	r0, sp, #16
 294 000a FFF7FEFF 		bl	memset
 295              	.LVL6:
 126:Core/Src/main.c **** 
 296              		.loc 1 126 3 is_stmt 1 view .LVU75
 126:Core/Src/main.c **** 
 297              		.loc 1 126 22 is_stmt 0 view .LVU76
 298 000e 1022     		movs	r2, #16
 299 0010 0021     		movs	r1, #0
 300 0012 6846     		mov	r0, sp
 301 0014 FFF7FEFF 		bl	memset
 302              	.LVL7:
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 303              		.loc 1 131 3 is_stmt 1 view .LVU77
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 304              		.loc 1 131 36 is_stmt 0 view .LVU78
 305 0018 0223     		movs	r3, #2
 306 001a 0493     		str	r3, [sp, #16]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 307              		.loc 1 132 3 is_stmt 1 view .LVU79
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 308              		.loc 1 132 30 is_stmt 0 view .LVU80
 309 001c 0122     		movs	r2, #1
 310 001e 0792     		str	r2, [sp, #28]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 311              		.loc 1 133 3 is_stmt 1 view .LVU81
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 312              		.loc 1 133 41 is_stmt 0 view .LVU82
 313 0020 0F32     		adds	r2, r2, #15
 314 0022 0892     		str	r2, [sp, #32]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 315              		.loc 1 134 3 is_stmt 1 view .LVU83
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 316              		.loc 1 134 34 is_stmt 0 view .LVU84
 317 0024 0C93     		str	r3, [sp, #48]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 318              		.loc 1 135 3 is_stmt 1 view .LVU85
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 319              		.loc 1 136 3 view .LVU86
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 320              		.loc 1 136 32 is_stmt 0 view .LVU87
 321 0026 A023     		movs	r3, #160
 322 0028 9B03     		lsls	r3, r3, #14
 323 002a 0E93     		str	r3, [sp, #56]
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 324              		.loc 1 137 3 is_stmt 1 view .LVU88
 138:Core/Src/main.c ****     Error_Handler();
 325              		.loc 1 138 3 view .LVU89
 138:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 14


 326              		.loc 1 138 7 is_stmt 0 view .LVU90
 327 002c 04A8     		add	r0, sp, #16
 328 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 329              	.LVL8:
 138:Core/Src/main.c ****     Error_Handler();
 330              		.loc 1 138 6 discriminator 1 view .LVU91
 331 0032 0028     		cmp	r0, #0
 332 0034 0ED1     		bne	.L14
 144:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 333              		.loc 1 144 3 is_stmt 1 view .LVU92
 144:Core/Src/main.c ****       RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 334              		.loc 1 144 31 is_stmt 0 view .LVU93
 335 0036 0723     		movs	r3, #7
 336 0038 0093     		str	r3, [sp]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 337              		.loc 1 146 3 is_stmt 1 view .LVU94
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 338              		.loc 1 146 34 is_stmt 0 view .LVU95
 339 003a 053B     		subs	r3, r3, #5
 340 003c 0193     		str	r3, [sp, #4]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 341              		.loc 1 147 3 is_stmt 1 view .LVU96
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 342              		.loc 1 147 35 is_stmt 0 view .LVU97
 343 003e 0023     		movs	r3, #0
 344 0040 0293     		str	r3, [sp, #8]
 148:Core/Src/main.c **** 
 345              		.loc 1 148 3 is_stmt 1 view .LVU98
 148:Core/Src/main.c **** 
 346              		.loc 1 148 36 is_stmt 0 view .LVU99
 347 0042 0393     		str	r3, [sp, #12]
 150:Core/Src/main.c ****     Error_Handler();
 348              		.loc 1 150 3 is_stmt 1 view .LVU100
 150:Core/Src/main.c ****     Error_Handler();
 349              		.loc 1 150 7 is_stmt 0 view .LVU101
 350 0044 0121     		movs	r1, #1
 351 0046 6846     		mov	r0, sp
 352 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 353              	.LVL9:
 150:Core/Src/main.c ****     Error_Handler();
 354              		.loc 1 150 6 discriminator 1 view .LVU102
 355 004c 0028     		cmp	r0, #0
 356 004e 03D1     		bne	.L15
 153:Core/Src/main.c **** 
 357              		.loc 1 153 1 view .LVU103
 358 0050 11B0     		add	sp, sp, #68
 359              		@ sp needed
 360 0052 00BD     		pop	{pc}
 361              	.L14:
 139:Core/Src/main.c ****   }
 362              		.loc 1 139 5 is_stmt 1 view .LVU104
 363 0054 FFF7FEFF 		bl	Error_Handler
 364              	.LVL10:
 365              	.L15:
 151:Core/Src/main.c ****   }
 366              		.loc 1 151 5 view .LVU105
 367 0058 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 15


 368              	.LVL11:
 369              		.cfi_endproc
 370              	.LFE41:
 372              		.section	.text.main,"ax",%progbits
 373              		.align	1
 374              		.global	main
 375              		.syntax unified
 376              		.code	16
 377              		.thumb_func
 379              	main:
 380              	.LFB40:
  67:Core/Src/main.c **** 
 381              		.loc 1 67 16 view -0
 382              		.cfi_startproc
 383              		@ Volatile: function does not return.
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386 0000 10B5     		push	{r4, lr}
 387              	.LCFI5:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 4, -8
 390              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 391              		.loc 1 77 3 view .LVU107
 392 0002 FFF7FEFF 		bl	HAL_Init
 393              	.LVL12:
  84:Core/Src/main.c **** 
 394              		.loc 1 84 3 view .LVU108
 395 0006 FFF7FEFF 		bl	SystemClock_Config
 396              	.LVL13:
  91:Core/Src/main.c ****   MX_USART2_UART_Init();
 397              		.loc 1 91 3 view .LVU109
 398 000a FFF7FEFF 		bl	MX_GPIO_Init
 399              	.LVL14:
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 400              		.loc 1 92 3 view .LVU110
 401 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 402              	.LVL15:
 403              	.L17:
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 404              		.loc 1 99 3 view .LVU111
 109:Core/Src/main.c ****     HAL_Delay(500);	
 405              		.loc 1 109 5 view .LVU112
 406 0012 9020     		movs	r0, #144
 407 0014 2021     		movs	r1, #32
 408 0016 C005     		lsls	r0, r0, #23
 409 0018 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 410              	.LVL16:
 110:Core/Src/main.c ****     
 411              		.loc 1 110 5 discriminator 1 view .LVU113
 412 001c FA20     		movs	r0, #250
 413 001e 4000     		lsls	r0, r0, #1
 414 0020 FFF7FEFF 		bl	HAL_Delay
 415              	.LVL17:
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 416              		.loc 1 99 9 view .LVU114
 417 0024 F5E7     		b	.L17
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 16


 418              		.cfi_endproc
 419              	.LFE40:
 421              		.global	huart2
 422              		.section	.bss.huart2,"aw",%nobits
 423              		.align	2
 426              	huart2:
 427 0000 00000000 		.space	136
 427      00000000 
 427      00000000 
 427      00000000 
 427      00000000 
 428              		.text
 429              	.Letext0:
 430              		.file 3 "C:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 431              		.file 4 "C:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 432              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 433              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 434              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 435              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 436              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 437              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 438              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 439              		.file 12 "<built-in>"
ARM GAS  C:\msys64\tmp\ccB2Wd8g.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\msys64\tmp\ccB2Wd8g.s:19     .text.MX_GPIO_Init:00000000 $t
C:\msys64\tmp\ccB2Wd8g.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\msys64\tmp\ccB2Wd8g.s:151    .text.MX_GPIO_Init:00000084 $d
C:\msys64\tmp\ccB2Wd8g.s:157    .text.Error_Handler:00000000 $t
C:\msys64\tmp\ccB2Wd8g.s:163    .text.Error_Handler:00000000 Error_Handler
C:\msys64\tmp\ccB2Wd8g.s:195    .text.MX_USART2_UART_Init:00000000 $t
C:\msys64\tmp\ccB2Wd8g.s:200    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\msys64\tmp\ccB2Wd8g.s:264    .text.MX_USART2_UART_Init:00000030 $d
C:\msys64\tmp\ccB2Wd8g.s:426    .bss.huart2:00000000 huart2
C:\msys64\tmp\ccB2Wd8g.s:270    .text.SystemClock_Config:00000000 $t
C:\msys64\tmp\ccB2Wd8g.s:276    .text.SystemClock_Config:00000000 SystemClock_Config
C:\msys64\tmp\ccB2Wd8g.s:373    .text.main:00000000 $t
C:\msys64\tmp\ccB2Wd8g.s:379    .text.main:00000000 main
C:\msys64\tmp\ccB2Wd8g.s:423    .bss.huart2:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
